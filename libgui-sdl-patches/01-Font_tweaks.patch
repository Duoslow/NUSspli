diff --git a/source/gui/GuiText.cpp b/source/gui/GuiText.cpp
index 69c61e3..09b6685 100644
--- a/source/gui/GuiText.cpp
+++ b/source/gui/GuiText.cpp
@@ -60,13 +60,11 @@ const std::string GuiText::getText() const {
 
 void GuiText::setText(const std::string& t) {
     this->text = t;
-    this->updateSize();
     this->doUpdateTexture = true;
 }
 
 void GuiText::setFontSize(int32_t size) {
     this->fc_font = this->gFont->getFont(size);
-    updateSize();
     this->doUpdateTexture = true;
 }
 
@@ -74,19 +72,19 @@ void GuiText::setMaxWidth(float width) {
     this->maxWidth = width;
 
     // Rebuild the texture cache on next draw
-    updateSize();
-    doUpdateTexture = true;
+    this->doUpdateTexture = true;
 }
 
 void GuiText::updateSize() {
-    auto height = FC_GetColumnHeight(fc_font, maxWidth, text.c_str());
-    auto width = FC_GetWidth(fc_font, text.c_str());
-    width = width > maxWidth ? maxWidth : width;
-    this->setSize(width, height);
+    auto te = text.c_str();
+    auto width = FC_GetWidth(fc_font, te);
+    if(width > maxWidth)
+        width = maxWidth;
+    this->setSize(width, FC_GetColumnHeight(fc_font, maxWidth, te));
 }
 
 void GuiText::updateTexture(Renderer *renderer) {
-    if(doUpdateTexture) {
+    if(this->doUpdateTexture) {
         updateSize();
         int tex_width = width == 0 ? 1 : (int) width;
         int tex_height = height == 0 ? 1 : (int)height;
@@ -107,14 +105,14 @@ void GuiText::updateTexture(Renderer *renderer) {
             SDL_RenderClear(renderer->getRenderer());
 
             // Draw text to texture
-            FC_DrawColumnColor(fc_font, renderer->getRenderer(), 0, 0, maxWidth, color, text.c_str());
+            FC_DrawColumnColor(fc_font, renderer->getRenderer(), 0, 0, width, color, text.c_str());
 
             // Restore render target
             SDL_SetRenderTarget(renderer->getRenderer(), nullptr);
         } else {
             LG_Log("Failed to create texture");
         }
-        doUpdateTexture = false;
+        this->doUpdateTexture = false;
     }
 }
 
